<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.felixalacampagne</groupId>
  <artifactId>xmltransform</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>xmltransform</name>
  <description>Perform enhanced XSLT transforms</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>
  
  <build>
    <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-jar-plugin</artifactId>
         <version>2.6</version>
         <configuration>
            <skipIfEmpty>true</skipIfEmpty>
         </configuration>
      </plugin>  
      
         <!-- This generates HTMLMaker.jar as an 'executable' a jar -->
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <appendAssemblyId>false</appendAssemblyId>
               <descriptorRefs>
                  <descriptorRef>jar-with-dependencies</descriptorRef>
               </descriptorRefs>
            </configuration>
            <!-- This magic means the combined jar is built as part of the 
                 normal 'clean install' build of the parent project (see FLACtagger pom.xml for more details).
                 
                 The original project was used to produce a number of slightly different variations of the app
                 which allowed double click invocation in the appropriate mode, eg. QR of clipboard, QR EPC of
                 account information on the clipboard, GUI to enter transaction details and show QR.
                 Rather than mess with sub-projects etc. I just want to generate all variations each time
                 a build is performed. This is acheived by using multiple execution blocks with the different
                 configurations required for each app. According to the internet this is highly frowned upon
                 however it seems to work like a charm!!
            -->
            <executions>
               <execution>
                  <id>make-HTMLMaker</id>
                  <phase>package</phase>
                  <goals><goal>single</goal></goals>
                  <configuration>
                     <archive>
                        <manifest>
                           <mainClass>com.scu.xmltv.HTMLMaker</mainClass>
                        </manifest>
                     </archive>
                     <finalName>../HTMLMaker</finalName>
                  </configuration>                 
               </execution>
            </executions>
         </plugin>      
      
      
          
    </plugins>
  </build>
  <dependencies>
  	<dependency>
  		<groupId>xalan</groupId>
  		<artifactId>xalan</artifactId>
  	</dependency>
  	<dependency>
  		<groupId>xalan</groupId>
  		<artifactId>serializer</artifactId>
  	</dependency>
   <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
   </dependency>
   <dependency>
   	<groupId>ch.qos.logback</groupId>
   	<artifactId>logback-classic</artifactId>
   </dependency>
  </dependencies>
  <dependencyManagement>
  	<dependencies>
  		<dependency>
  			<groupId>xalan</groupId>
  			<artifactId>xalan</artifactId>
  			<version>2.7.2</version>
  		</dependency>
  		<dependency>
  			<groupId>xalan</groupId>
  			<artifactId>serializer</artifactId>
  			<version>2.7.2</version>
  		</dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-databind</artifactId>
         <version>2.9.8</version>
      </dependency>
      <dependency>
      	<groupId>ch.qos.logback</groupId>
      	<artifactId>logback-classic</artifactId>
      	<version>1.3.6</version>
      </dependency>
  	</dependencies>
  </dependencyManagement>
</project>